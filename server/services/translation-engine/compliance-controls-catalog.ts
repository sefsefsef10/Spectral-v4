import { db } from '../../db';
import { complianceControls, eventTypes } from '../../../shared/schema';
import { eq } from 'drizzle-orm';

interface ComplianceControl {
  id: string;
  framework: string;
  controlId: string;
  controlName: string;
  description: string;
  category: string;
  severity: string;
  requiredEvidence: string[];
  triggerThreshold?: number;
}

const HIPAA_CONTROLS: ComplianceControl[] = [
  {
    id: 'hipaa-164-308-a-1',
    framework: 'HIPAA',
    controlId: '164.308(a)(1)',
    controlName: 'Security Management Process',
    description: 'Implement policies and procedures to prevent, detect, contain, and correct security violations',
    category: 'Administrative Safeguards',
    severity: 'high',
    requiredEvidence: ['security_policies', 'risk_assessment', 'incident_response_plan'],
  },
  {
    id: 'hipaa-164-308-a-3',
    framework: 'HIPAA',
    controlId: '164.308(a)(3)',
    controlName: 'Workforce Security',
    description: 'Ensure workforce members have appropriate access to PHI and prevent unauthorized access',
    category: 'Administrative Safeguards',
    severity: 'high',
    requiredEvidence: ['access_authorization', 'workforce_clearance', 'termination_procedures'],
  },
  {
    id: 'hipaa-164-308-a-4',
    framework: 'HIPAA',
    controlId: '164.308(a)(4)',
    controlName: 'Information Access Management',
    description: 'Authorize access to PHI consistent with applicable HIPAA requirements',
    category: 'Administrative Safeguards',
    severity: 'critical',
    requiredEvidence: ['access_establishment', 'access_modification', 'access_logs'],
    triggerThreshold: 0,
  },
  {
    id: 'hipaa-164-308-a-5',
    framework: 'HIPAA',
    controlId: '164.308(a)(5)',
    controlName: 'Security Awareness and Training',
    description: 'Implement security awareness and training program for all workforce members',
    category: 'Administrative Safeguards',
    severity: 'medium',
    requiredEvidence: ['training_records', 'security_reminders', 'phishing_tests'],
  },
  {
    id: 'hipaa-164-308-a-6',
    framework: 'HIPAA',
    controlId: '164.308(a)(6)',
    controlName: 'Security Incident Procedures',
    description: 'Identify and respond to suspected or known security incidents',
    category: 'Administrative Safeguards',
    severity: 'high',
    requiredEvidence: ['incident_response', 'breach_notification', 'incident_logs'],
  },
  {
    id: 'hipaa-164-308-a-8',
    framework: 'HIPAA',
    controlId: '164.308(a)(8)',
    controlName: 'Evaluation',
    description: 'Perform periodic technical and nontechnical evaluation of security safeguards',
    category: 'Administrative Safeguards',
    severity: 'medium',
    requiredEvidence: ['security_audit', 'compliance_assessment', 'evaluation_reports'],
  },
  {
    id: 'hipaa-164-310-a-1',
    framework: 'HIPAA',
    controlId: '164.310(a)(1)',
    controlName: 'Facility Access Controls',
    description: 'Limit physical access to facilities while ensuring authorized access',
    category: 'Physical Safeguards',
    severity: 'high',
    requiredEvidence: ['facility_access_logs', 'badge_system', 'visitor_logs'],
  },
  {
    id: 'hipaa-164-310-d-1',
    framework: 'HIPAA',
    controlId: '164.310(d)(1)',
    controlName: 'Device and Media Controls',
    description: 'Implement policies for receiving and removing hardware and electronic media',
    category: 'Physical Safeguards',
    severity: 'high',
    requiredEvidence: ['disposal_procedures', 'media_reuse', 'accountability_logs'],
  },
  {
    id: 'hipaa-164-312-a-1',
    framework: 'HIPAA',
    controlId: '164.312(a)(1)',
    controlName: 'Access Control',
    description: 'Implement technical policies to allow only authorized access to ePHI',
    category: 'Technical Safeguards',
    severity: 'critical',
    requiredEvidence: ['unique_user_id', 'emergency_access', 'automatic_logoff', 'encryption'],
    triggerThreshold: 0,
  },
  {
    id: 'hipaa-164-312-a-2',
    framework: 'HIPAA',
    controlId: '164.312(a)(2)',
    controlName: 'Audit Controls',
    description: 'Implement hardware, software, and procedures that record and examine access to ePHI',
    category: 'Technical Safeguards',
    severity: 'high',
    requiredEvidence: ['audit_logs', 'log_review', 'monitoring_system'],
  },
  {
    id: 'hipaa-164-312-b',
    framework: 'HIPAA',
    controlId: '164.312(b)',
    controlName: 'Integrity Controls',
    description: 'Implement policies to ensure ePHI is not improperly altered or destroyed',
    category: 'Technical Safeguards',
    severity: 'critical',
    requiredEvidence: ['data_integrity_checks', 'digital_signatures', 'change_logs'],
    triggerThreshold: 0,
  },
  {
    id: 'hipaa-164-312-c-1',
    framework: 'HIPAA',
    controlId: '164.312(c)(1)',
    controlName: 'Person or Entity Authentication',
    description: 'Implement procedures to verify person or entity seeking access to ePHI',
    category: 'Technical Safeguards',
    severity: 'critical',
    requiredEvidence: ['authentication_system', 'mfa', 'identity_verification'],
    triggerThreshold: 0,
  },
  {
    id: 'hipaa-164-312-d',
    framework: 'HIPAA',
    controlId: '164.312(d)',
    controlName: 'Transmission Security',
    description: 'Implement technical security measures to guard against unauthorized access to ePHI transmitted over networks',
    category: 'Technical Safeguards',
    severity: 'critical',
    requiredEvidence: ['encryption_in_transit', 'network_security', 'vpn'],
    triggerThreshold: 0,
  },
  {
    id: 'hipaa-164-312-e-1',
    framework: 'HIPAA',
    controlId: '164.312(e)(1)',
    controlName: 'Encryption and Decryption',
    description: 'Implement mechanism to encrypt and decrypt ePHI',
    category: 'Technical Safeguards',
    severity: 'critical',
    requiredEvidence: ['encryption_at_rest', 'key_management', 'encryption_standards'],
    triggerThreshold: 0,
  },
  {
    id: 'hipaa-164-308-a-5-i',
    framework: 'HIPAA',
    controlId: '164.308(a)(5)(i)',
    controlName: 'Workforce Training Procedures',
    description: 'Implement security awareness and training procedures for all workforce members including management',
    category: 'Administrative Safeguards',
    severity: 'high',
    requiredEvidence: ['training_curriculum', 'attendance_records', 'training_materials', 'competency_assessments'],
  },
  {
    id: 'hipaa-164-308-a-7',
    framework: 'HIPAA',
    controlId: '164.308(a)(7)',
    controlName: 'Contingency Planning',
    description: 'Establish and implement policies and procedures for responding to emergencies or other occurrences',
    category: 'Administrative Safeguards',
    severity: 'critical',
    requiredEvidence: ['contingency_plan', 'data_backup_plan', 'disaster_recovery_plan', 'emergency_mode_operations'],
    triggerThreshold: 0,
  },
  {
    id: 'hipaa-164-308-b-1-new',
    framework: 'HIPAA',
    controlId: '164.308(b)(1)',
    controlName: 'Business Associate Agreements',
    description: 'Obtain satisfactory assurances that business associates will appropriately safeguard PHI',
    category: 'Administrative Safeguards',
    severity: 'critical',
    requiredEvidence: ['baa_agreements', 'vendor_contracts', 'subcontractor_agreements', 'compliance_verification'],
    triggerThreshold: 0,
  },
  {
    id: 'hipaa-164-310-d-2-i',
    framework: 'HIPAA',
    controlId: '164.310(d)(2)(i)',
    controlName: 'Media Disposal Procedures',
    description: 'Implement policies and procedures for disposal of ePHI and hardware or electronic media on which it is stored',
    category: 'Physical Safeguards',
    severity: 'high',
    requiredEvidence: ['disposal_procedures', 'destruction_certificates', 'sanitization_records', 'vendor_certifications'],
  },
  {
    id: 'hipaa-164-308-a-4-ii-b',
    framework: 'HIPAA',
    controlId: '164.308(a)(4)(ii)(B)',
    controlName: 'Access Establishment Procedures',
    description: 'Implement procedures for establishing, documenting, reviewing and modifying user access rights',
    category: 'Administrative Safeguards',
    severity: 'critical',
    requiredEvidence: ['access_request_forms', 'approval_workflows', 'access_reviews', 'role_definitions'],
    triggerThreshold: 0,
  },
  {
    id: 'hipaa-164-312-a-2-ii',
    framework: 'HIPAA',
    controlId: '164.312(a)(2)(ii)',
    controlName: 'Emergency Access Procedures',
    description: 'Establish procedures for obtaining necessary ePHI during an emergency',
    category: 'Technical Safeguards',
    severity: 'high',
    requiredEvidence: ['emergency_access_policy', 'break_glass_procedures', 'emergency_logs', 'post_emergency_reviews'],
  },
  {
    id: 'hipaa-164-312-a-2-iii',
    framework: 'HIPAA',
    controlId: '164.312(a)(2)(iii)',
    controlName: 'Automatic Logoff',
    description: 'Implement electronic procedures that terminate electronic session after predetermined time of inactivity',
    category: 'Technical Safeguards',
    severity: 'medium',
    requiredEvidence: ['session_timeout_config', 'automatic_logoff_settings', 'inactivity_parameters'],
  },
  {
    id: 'hipaa-164-312-e-2-i',
    framework: 'HIPAA',
    controlId: '164.312(e)(2)(i)',
    controlName: 'Encryption Key Management',
    description: 'Implement procedures to properly manage encryption and decryption keys throughout their lifecycle',
    category: 'Technical Safeguards',
    severity: 'critical',
    requiredEvidence: ['key_generation_procedures', 'key_storage_security', 'key_rotation_logs', 'key_destruction_records'],
    triggerThreshold: 0,
  },
  {
    id: 'hipaa-164-308-a-7-ii-a',
    framework: 'HIPAA',
    controlId: '164.308(a)(7)(ii)(A)',
    controlName: 'Backup and Recovery',
    description: 'Establish and implement procedures to create and maintain retrievable exact copies of ePHI',
    category: 'Administrative Safeguards',
    severity: 'critical',
    requiredEvidence: ['backup_procedures', 'backup_schedules', 'recovery_testing', 'backup_verification_logs'],
    triggerThreshold: 0,
  },
  {
    id: 'hipaa-164-308-a-7-ii-b',
    framework: 'HIPAA',
    controlId: '164.308(a)(7)(ii)(B)',
    controlName: 'Disaster Recovery',
    description: 'Establish procedures to restore any loss of data and enable continuation of critical business processes',
    category: 'Administrative Safeguards',
    severity: 'critical',
    requiredEvidence: ['disaster_recovery_plan', 'recovery_time_objectives', 'recovery_point_objectives', 'dr_testing_results'],
    triggerThreshold: 0,
  },
  // Additional 19 controls for 100% HIPAA coverage (24 → 43)
  {
    id: 'hipaa-164-308-a-1-ii-a',
    framework: 'HIPAA',
    controlId: '164.308(a)(1)(ii)(A)',
    controlName: 'Risk Analysis',
    description: 'Conduct accurate and thorough assessment of potential risks and vulnerabilities to ePHI',
    category: 'Administrative Safeguards',
    severity: 'critical',
    requiredEvidence: ['risk_analysis_documentation', 'vulnerability_assessments', 'threat_analysis', 'risk_register'],
    triggerThreshold: 0,
  },
  {
    id: 'hipaa-164-308-a-1-ii-b',
    framework: 'HIPAA',
    controlId: '164.308(a)(1)(ii)(B)',
    controlName: 'Risk Management',
    description: 'Implement security measures to reduce risks and vulnerabilities to a reasonable and appropriate level',
    category: 'Administrative Safeguards',
    severity: 'critical',
    requiredEvidence: ['risk_mitigation_plans', 'security_controls', 'risk_treatment_records'],
    triggerThreshold: 0,
  },
  {
    id: 'hipaa-164-308-a-1-ii-c',
    framework: 'HIPAA',
    controlId: '164.308(a)(1)(ii)(C)',
    controlName: 'Sanction Policy',
    description: 'Apply appropriate sanctions against workforce members who fail to comply with security policies',
    category: 'Administrative Safeguards',
    severity: 'high',
    requiredEvidence: ['sanction_policy', 'disciplinary_records', 'violation_tracking'],
  },
  {
    id: 'hipaa-164-308-a-1-ii-d',
    framework: 'HIPAA',
    controlId: '164.308(a)(1)(ii)(D)',
    controlName: 'Information System Activity Review',
    description: 'Implement procedures to regularly review records of information system activity',
    category: 'Administrative Safeguards',
    severity: 'high',
    requiredEvidence: ['audit_log_reviews', 'monitoring_reports', 'anomaly_detection_records'],
  },
  {
    id: 'hipaa-164-308-a-2',
    framework: 'HIPAA',
    controlId: '164.308(a)(2)',
    controlName: 'Assigned Security Responsibility',
    description: 'Identify the security official responsible for development and implementation of security policies',
    category: 'Administrative Safeguards',
    severity: 'critical',
    requiredEvidence: ['security_officer_designation', 'responsibilities_documentation', 'authority_delegation'],
    triggerThreshold: 0,
  },
  {
    id: 'hipaa-164-308-a-5-ii-a',
    framework: 'HIPAA',
    controlId: '164.308(a)(5)(ii)(A)',
    controlName: 'Security Reminders',
    description: 'Periodic security updates and reminders to workforce members',
    category: 'Administrative Safeguards',
    severity: 'medium',
    requiredEvidence: ['security_awareness_campaigns', 'reminder_schedules', 'communication_logs'],
  },
  {
    id: 'hipaa-164-308-a-5-ii-b',
    framework: 'HIPAA',
    controlId: '164.308(a)(5)(ii)(B)',
    controlName: 'Protection from Malicious Software',
    description: 'Procedures for guarding against, detecting, and reporting malicious software',
    category: 'Administrative Safeguards',
    severity: 'high',
    requiredEvidence: ['antivirus_policies', 'malware_detection_logs', 'incident_reports'],
  },
  {
    id: 'hipaa-164-308-a-5-ii-c',
    framework: 'HIPAA',
    controlId: '164.308(a)(5)(ii)(C)',
    controlName: 'Log-in Monitoring',
    description: 'Procedures for monitoring log-in attempts and reporting discrepancies',
    category: 'Administrative Safeguards',
    severity: 'high',
    requiredEvidence: ['login_monitoring_system', 'failed_login_alerts', 'access_reports'],
  },
  {
    id: 'hipaa-164-308-a-5-ii-d',
    framework: 'HIPAA',
    controlId: '164.308(a)(5)(ii)(D)',
    controlName: 'Password Management',
    description: 'Procedures for creating, changing, and safeguarding passwords',
    category: 'Administrative Safeguards',
    severity: 'high',
    requiredEvidence: ['password_policy', 'password_complexity_requirements', 'rotation_schedules'],
  },
  {
    id: 'hipaa-164-308-a-7-ii-c',
    framework: 'HIPAA',
    controlId: '164.308(a)(7)(ii)(C)',
    controlName: 'Emergency Mode Operation Plan',
    description: 'Establish procedures to enable continuation of critical business processes for protection of ePHI while operating in emergency mode',
    category: 'Administrative Safeguards',
    severity: 'critical',
    requiredEvidence: ['emergency_procedures', 'critical_function_identification', 'emergency_communication_plan'],
    triggerThreshold: 0,
  },
  {
    id: 'hipaa-164-308-a-7-ii-d',
    framework: 'HIPAA',
    controlId: '164.308(a)(7)(ii)(D)',
    controlName: 'Testing and Revision Procedures',
    description: 'Implement procedures for periodic testing and revision of contingency plans',
    category: 'Administrative Safeguards',
    severity: 'high',
    requiredEvidence: ['testing_schedules', 'test_results', 'revision_history', 'lessons_learned'],
  },
  {
    id: 'hipaa-164-308-a-7-ii-e',
    framework: 'HIPAA',
    controlId: '164.308(a)(7)(ii)(E)',
    controlName: 'Applications and Data Criticality Analysis',
    description: 'Assess relative criticality of specific applications and data in support of other contingency plan components',
    category: 'Administrative Safeguards',
    severity: 'high',
    requiredEvidence: ['criticality_analysis', 'business_impact_assessment', 'recovery_priorities'],
  },
  {
    id: 'hipaa-164-310-a-2-i',
    framework: 'HIPAA',
    controlId: '164.310(a)(2)(i)',
    controlName: 'Facility Security Plan',
    description: 'Implement policies to safeguard facility and equipment from unauthorized physical access',
    category: 'Physical Safeguards',
    severity: 'high',
    requiredEvidence: ['facility_security_plan', 'physical_controls', 'access_procedures'],
  },
  {
    id: 'hipaa-164-310-b',
    framework: 'HIPAA',
    controlId: '164.310(b)',
    controlName: 'Workstation Use',
    description: 'Implement policies specifying proper functions to be performed and manner of use of workstations',
    category: 'Physical Safeguards',
    severity: 'medium',
    requiredEvidence: ['workstation_use_policy', 'acceptable_use_guidelines', 'security_awareness'],
  },
  {
    id: 'hipaa-164-310-c',
    framework: 'HIPAA',
    controlId: '164.310(c)',
    controlName: 'Workstation Security',
    description: 'Implement physical safeguards for workstations that access ePHI to restrict access to authorized users',
    category: 'Physical Safeguards',
    severity: 'high',
    requiredEvidence: ['workstation_security_controls', 'screen_locks', 'physical_positioning'],
  },
  {
    id: 'hipaa-164-310-d-2-ii',
    framework: 'HIPAA',
    controlId: '164.310(d)(2)(ii)',
    controlName: 'Media Re-use',
    description: 'Implement procedures for removal of ePHI from electronic media before re-use',
    category: 'Physical Safeguards',
    severity: 'high',
    requiredEvidence: ['media_sanitization_procedures', 'data_wiping_logs', 'reuse_verification'],
  },
  {
    id: 'hipaa-164-312-c-2',
    framework: 'HIPAA',
    controlId: '164.312(c)(2)',
    controlName: 'Mechanism to Authenticate ePHI',
    description: 'Implement electronic mechanisms to corroborate that ePHI has not been altered or destroyed',
    category: 'Technical Safeguards',
    severity: 'high',
    requiredEvidence: ['integrity_checks', 'checksums', 'digital_signatures', 'audit_trails'],
  },
  {
    id: 'hipaa-164-312-e-2-ii',
    framework: 'HIPAA',
    controlId: '164.312(e)(2)(ii)',
    controlName: 'Transmission Security - Encryption',
    description: 'Implement mechanism to encrypt ePHI whenever deemed appropriate during transmission',
    category: 'Technical Safeguards',
    severity: 'critical',
    requiredEvidence: ['transmission_encryption', 'tls_configuration', 'vpn_usage', 'encryption_protocols'],
    triggerThreshold: 0,
  },
  {
    id: 'hipaa-164-314-a-1',
    framework: 'HIPAA',
    controlId: '164.314(a)(1)',
    controlName: 'Business Associate Contracts - Organizational Requirements',
    description: 'Contract must ensure business associate will implement safeguards to protect ePHI',
    category: 'Organizational Requirements',
    severity: 'critical',
    requiredEvidence: ['business_associate_agreements', 'contract_compliance_verification', 'subcontractor_management'],
    triggerThreshold: 0,
  },
  {
    id: 'hipaa-164-316-a',
    framework: 'HIPAA',
    controlId: '164.316(a)',
    controlName: 'Policies and Procedures',
    description: 'Implement reasonable and appropriate policies and procedures to comply with HIPAA Security Rule',
    category: 'Policies and Documentation',
    severity: 'critical',
    requiredEvidence: ['security_policies', 'procedures_documentation', 'policy_approval_records'],
    triggerThreshold: 0,
  },
  {
    id: 'hipaa-164-316-b-1-i',
    framework: 'HIPAA',
    controlId: '164.316(b)(1)(i)',
    controlName: 'Documentation - Time Limit',
    description: 'Retain documentation for 6 years from date of creation or last effective date',
    category: 'Policies and Documentation',
    severity: 'high',
    requiredEvidence: ['retention_policy', 'document_retention_logs', 'archive_procedures'],
  },
  {
    id: 'hipaa-164-316-b-1-ii',
    framework: 'HIPAA',
    controlId: '164.316(b)(1)(ii)',
    controlName: 'Documentation - Availability',
    description: 'Make documentation available to those responsible for implementing procedures',
    category: 'Policies and Documentation',
    severity: 'medium',
    requiredEvidence: ['documentation_access', 'knowledge_management_system', 'access_logs'],
  },
  {
    id: 'hipaa-164-316-b-1-iii',
    framework: 'HIPAA',
    controlId: '164.316(b)(1)(iii)',
    controlName: 'Documentation - Updates',
    description: 'Review and update documentation periodically and as needed in response to changes',
    category: 'Policies and Documentation',
    severity: 'high',
    requiredEvidence: ['review_schedules', 'update_logs', 'version_control', 'change_management_records'],
  },
];

const NIST_AI_RMF_CONTROLS: ComplianceControl[] = [
  {
    id: 'nist-govern-1-1',
    framework: 'NIST AI RMF',
    controlId: 'GOVERN-1.1',
    controlName: 'AI Risk Management Strategy',
    description: 'Legal and regulatory requirements involving AI are understood, managed, and documented',
    category: 'Governance',
    severity: 'high',
    requiredEvidence: ['risk_strategy', 'regulatory_mapping', 'compliance_documentation'],
  },
  {
    id: 'nist-govern-1-2',
    framework: 'NIST AI RMF',
    controlId: 'GOVERN-1.2',
    controlName: 'AI Risk Management Culture',
    description: 'Organizational AI risk culture is established and prioritized',
    category: 'Governance',
    severity: 'medium',
    requiredEvidence: ['culture_assessment', 'training_program', 'accountability_framework'],
  },
  {
    id: 'nist-govern-2-1',
    framework: 'NIST AI RMF',
    controlId: 'GOVERN-2.1',
    controlName: 'AI Risk Management Roles',
    description: 'Roles and responsibilities for AI risk management are clearly defined',
    category: 'Governance',
    severity: 'high',
    requiredEvidence: ['role_definitions', 'raci_matrix', 'accountability_logs'],
  },
  {
    id: 'nist-govern-3-1',
    framework: 'NIST AI RMF',
    controlId: 'GOVERN-3.1',
    controlName: 'AI Risk Tolerance',
    description: 'Organizational risk tolerance for AI systems is determined and documented',
    category: 'Governance',
    severity: 'high',
    requiredEvidence: ['risk_tolerance', 'risk_appetite', 'approval_thresholds'],
  },
  {
    id: 'nist-map-1-1',
    framework: 'NIST AI RMF',
    controlId: 'MAP-1.1',
    controlName: 'AI System Context',
    description: 'Context and business value of AI system is defined and documented',
    category: 'Map',
    severity: 'medium',
    requiredEvidence: ['system_context', 'use_case', 'business_value'],
  },
  {
    id: 'nist-map-2-1',
    framework: 'NIST AI RMF',
    controlId: 'MAP-2.1',
    controlName: 'AI Impact Assessment',
    description: 'Impact of AI system on individuals, groups, and society is assessed',
    category: 'Map',
    severity: 'high',
    requiredEvidence: ['impact_assessment', 'stakeholder_analysis', 'harm_assessment'],
  },
  {
    id: 'nist-map-3-1',
    framework: 'NIST AI RMF',
    controlId: 'MAP-3.1',
    controlName: 'AI System Capabilities',
    description: 'Capabilities, limitations, and known risks of AI system are documented',
    category: 'Map',
    severity: 'high',
    requiredEvidence: ['capability_docs', 'limitation_docs', 'risk_register'],
  },
  {
    id: 'nist-measure-1-1',
    framework: 'NIST AI RMF',
    controlId: 'MEASURE-1.1',
    controlName: 'AI Performance Metrics',
    description: 'Appropriate metrics for AI system performance are identified and tracked',
    category: 'Measure',
    severity: 'high',
    requiredEvidence: ['performance_metrics', 'monitoring_dashboard', 'baseline_metrics'],
  },
  {
    id: 'nist-measure-2-1',
    framework: 'NIST AI RMF',
    controlId: 'MEASURE-2.1',
    controlName: 'AI Bias Testing',
    description: 'AI systems are tested for harmful bias across demographic groups',
    category: 'Measure',
    severity: 'critical',
    requiredEvidence: ['bias_testing', 'fairness_metrics', 'demographic_analysis'],
    triggerThreshold: 5,
  },
  {
    id: 'nist-measure-2-2',
    framework: 'NIST AI RMF',
    controlId: 'MEASURE-2.2',
    controlName: 'AI Data Quality',
    description: 'Training and operational data quality is measured and monitored',
    category: 'Measure',
    severity: 'high',
    requiredEvidence: ['data_quality_metrics', 'data_validation', 'data_monitoring'],
  },
  {
    id: 'nist-measure-3-1',
    framework: 'NIST AI RMF',
    controlId: 'MEASURE-3.1',
    controlName: 'AI Safety Validation',
    description: 'AI system safety is validated through rigorous testing',
    category: 'Measure',
    severity: 'critical',
    requiredEvidence: ['safety_testing', 'edge_case_testing', 'failure_mode_analysis'],
    triggerThreshold: 0,
  },
  {
    id: 'nist-manage-1-1',
    framework: 'NIST AI RMF',
    controlId: 'MANAGE-1.1',
    controlName: 'AI Risk Response',
    description: 'Responses to identified AI risks are planned and executed',
    category: 'Manage',
    severity: 'high',
    requiredEvidence: ['risk_response_plan', 'mitigation_actions', 'residual_risk'],
  },
  {
    id: 'nist-manage-2-1',
    framework: 'NIST AI RMF',
    controlId: 'MANAGE-2.1',
    controlName: 'AI Incident Response',
    description: 'Incidents involving AI systems are identified and managed',
    category: 'Manage',
    severity: 'critical',
    requiredEvidence: ['incident_response', 'escalation_procedures', 'incident_logs'],
    triggerThreshold: 0,
  },
  {
    id: 'nist-manage-3-1',
    framework: 'NIST AI RMF',
    controlId: 'MANAGE-3.1',
    controlName: 'AI Continuous Monitoring',
    description: 'AI systems are continuously monitored for changes in performance or risk',
    category: 'Manage',
    severity: 'high',
    requiredEvidence: ['monitoring_system', 'performance_tracking', 'drift_detection'],
  },
];

const FDA_SAMD_CONTROLS: ComplianceControl[] = [
  {
    id: 'fda-samd-1',
    framework: 'FDA SaMD',
    controlId: 'SaMD-1',
    controlName: 'Clinical Validation',
    description: 'Software clinical validity is demonstrated through appropriate clinical evidence',
    category: 'Clinical Evaluation',
    severity: 'critical',
    requiredEvidence: ['clinical_studies', 'validation_data', 'performance_claims'],
    triggerThreshold: 90,
  },
  {
    id: 'fda-samd-2',
    framework: 'FDA SaMD',
    controlId: 'SaMD-2',
    controlName: 'Analytical Validation',
    description: 'Software analytical validity is demonstrated through verification and validation',
    category: 'Technical Evaluation',
    severity: 'critical',
    requiredEvidence: ['verification_testing', 'validation_testing', 'performance_data'],
    triggerThreshold: 95,
  },
  {
    id: 'fda-samd-3',
    framework: 'FDA SaMD',
    controlId: 'SaMD-3',
    controlName: 'Software Safety Classification',
    description: 'Software is classified based on significance of information and healthcare situation',
    category: 'Risk Classification',
    severity: 'high',
    requiredEvidence: ['risk_classification', 'safety_analysis', 'harm_assessment'],
  },
  {
    id: 'fda-samd-4',
    framework: 'FDA SaMD',
    controlId: 'SaMD-4',
    controlName: 'Quality Management System',
    description: 'QMS compliant with 21 CFR Part 820 or ISO 13485 is maintained',
    category: 'Quality System',
    severity: 'critical',
    requiredEvidence: ['qms_documentation', 'design_controls', 'change_management'],
    triggerThreshold: 0,
  },
  {
    id: 'fda-samd-5',
    framework: 'FDA SaMD',
    controlId: 'SaMD-5',
    controlName: 'Cybersecurity Controls',
    description: 'Cybersecurity risks are identified, managed, and documented per FDA guidance',
    category: 'Cybersecurity',
    severity: 'critical',
    requiredEvidence: ['threat_model', 'security_controls', 'vulnerability_management'],
    triggerThreshold: 0,
  },
  {
    id: 'fda-samd-6',
    framework: 'FDA SaMD',
    controlId: 'SaMD-6',
    controlName: 'Post-Market Surveillance',
    description: 'System for monitoring device performance and adverse events is established',
    category: 'Post-Market',
    severity: 'critical',
    requiredEvidence: ['surveillance_plan', 'complaint_handling', 'adverse_event_reporting'],
    triggerThreshold: 0,
  },
  {
    id: 'fda-samd-7',
    framework: 'FDA SaMD',
    controlId: 'SaMD-7',
    controlName: 'Algorithm Change Management',
    description: 'Changes to AI/ML algorithms are controlled and documented',
    category: 'Change Control',
    severity: 'high',
    requiredEvidence: ['change_control', 'regression_testing', 'version_control'],
  },
  {
    id: 'fda-samd-8',
    framework: 'FDA SaMD',
    controlId: 'SaMD-8',
    controlName: 'Labeling and Instructions',
    description: 'Device labeling and instructions for use are accurate and comprehensive',
    category: 'Labeling',
    severity: 'high',
    requiredEvidence: ['labeling_docs', 'ifu', 'warnings_precautions'],
  },
  {
    id: 'fda-samd-9',
    framework: 'FDA SaMD',
    controlId: 'SaMD-9',
    controlName: 'Data Privacy and Security',
    description: 'Patient data privacy and security requirements are met',
    category: 'Privacy',
    severity: 'critical',
    requiredEvidence: ['privacy_assessment', 'data_protection', 'hipaa_compliance'],
    triggerThreshold: 0,
  },
  {
    id: 'fda-samd-10',
    framework: 'FDA SaMD',
    controlId: 'SaMD-10',
    controlName: 'Explainability and Transparency',
    description: 'AI/ML decision-making process is explainable to appropriate stakeholders',
    category: 'Explainability',
    severity: 'high',
    requiredEvidence: ['explainability_docs', 'transparency_report', 'clinician_guidance'],
  },
];

const ISO27001_CONTROLS: ComplianceControl[] = [
  {
    id: 'iso27001-a5-1',
    framework: 'ISO 27001',
    controlId: 'A.5.1',
    controlName: 'Information Security Policies',
    description: 'Information security policies defined and approved by management',
    category: 'Organizational',
    severity: 'high',
    requiredEvidence: ['security_policies', 'management_approval', 'policy_review'],
  },
  {
    id: 'iso27001-a6-1',
    framework: 'ISO 27001',
    controlId: 'A.6.1',
    controlName: 'Screening',
    description: 'Background verification checks on candidates for employment',
    category: 'People',
    severity: 'medium',
    requiredEvidence: ['background_checks', 'screening_procedures', 'verification_records'],
  },
  {
    id: 'iso27001-a8-1',
    framework: 'ISO 27001',
    controlId: 'A.8.1',
    controlName: 'Inventory of Assets',
    description: 'Assets associated with information are identified and inventory maintained',
    category: 'Asset Management',
    severity: 'high',
    requiredEvidence: ['asset_inventory', 'ownership_assignment', 'classification'],
  },
  {
    id: 'iso27001-a9-1',
    framework: 'ISO 27001',
    controlId: 'A.9.1',
    controlName: 'Access Control Policy',
    description: 'Access control policy established, documented and reviewed',
    category: 'Access Control',
    severity: 'critical',
    requiredEvidence: ['access_policy', 'access_reviews', 'authorization_records'],
    triggerThreshold: 0,
  },
  {
    id: 'iso27001-a10-1',
    framework: 'ISO 27001',
    controlId: 'A.10.1',
    controlName: 'Cryptographic Controls',
    description: 'Policy on use of cryptographic controls implemented',
    category: 'Cryptography',
    severity: 'critical',
    requiredEvidence: ['crypto_policy', 'key_management', 'encryption_implementation'],
    triggerThreshold: 0,
  },
  {
    id: 'iso27001-a12-1',
    framework: 'ISO 27001',
    controlId: 'A.12.1',
    controlName: 'Operational Procedures',
    description: 'Operating procedures documented and made available to users',
    category: 'Operations',
    severity: 'medium',
    requiredEvidence: ['operational_docs', 'procedures', 'user_access'],
  },
  {
    id: 'iso27001-a16-1',
    framework: 'ISO 27001',
    controlId: 'A.16.1',
    controlName: 'Incident Management',
    description: 'Management responsibilities and procedures established for security incidents',
    category: 'Incident Management',
    severity: 'high',
    requiredEvidence: ['incident_procedures', 'response_plan', 'incident_logs'],
  },
  {
    id: 'iso27001-a18-1',
    framework: 'ISO 27001',
    controlId: 'A.18.1',
    controlName: 'Compliance with Legal Requirements',
    description: 'Legal, statutory, regulatory and contractual requirements identified and documented',
    category: 'Compliance',
    severity: 'high',
    requiredEvidence: ['legal_register', 'compliance_mapping', 'audit_reports'],
  },
  {
    id: 'iso27001-a8-2',
    framework: 'ISO 27001',
    controlId: 'A.8.2',
    controlName: 'Information Classification and Handling',
    description: 'Information classified and handled in accordance with its importance to the organization',
    category: 'Asset Management',
    severity: 'high',
    requiredEvidence: ['classification_scheme', 'handling_procedures', 'labeling_standards'],
  },
  {
    id: 'iso27001-a10-2',
    framework: 'ISO 27001',
    controlId: 'A.10.2',
    controlName: 'Key Management',
    description: 'Cryptographic key management procedures support the use of cryptographic techniques',
    category: 'Cryptographic Controls',
    severity: 'critical',
    requiredEvidence: ['key_lifecycle_procedures', 'key_storage_controls', 'key_backup_recovery'],
    triggerThreshold: 0,
  },
  {
    id: 'iso27001-a15-1',
    framework: 'ISO 27001',
    controlId: 'A.15.1',
    controlName: 'Supplier Relationships',
    description: 'Information security in supplier relationships is established and maintained',
    category: 'Supplier Security',
    severity: 'high',
    requiredEvidence: ['supplier_agreements', 'security_requirements', 'supplier_assessments'],
  },
  {
    id: 'iso27001-a16-2',
    framework: 'ISO 27001',
    controlId: 'A.16.2',
    controlName: 'Response to Security Incidents',
    description: 'Information security events assessed and responded to in a consistent and effective manner',
    category: 'Incident Response',
    severity: 'critical',
    requiredEvidence: ['incident_response_procedures', 'escalation_paths', 'response_timeline_records'],
    triggerThreshold: 0,
  },
  {
    id: 'iso27001-a17-1',
    framework: 'ISO 27001',
    controlId: 'A.17.1',
    controlName: 'Business Continuity Planning',
    description: 'Information security continuity embedded in the organization business continuity management systems',
    category: 'Business Continuity',
    severity: 'critical',
    requiredEvidence: ['business_continuity_plan', 'continuity_testing', 'recovery_strategies'],
    triggerThreshold: 0,
  },
  {
    id: 'iso27001-a18-2',
    framework: 'ISO 27001',
    controlId: 'A.18.2',
    controlName: 'Compliance Reviews',
    description: 'Information security policies and compliance reviewed independently at planned intervals',
    category: 'Compliance Requirements',
    severity: 'high',
    requiredEvidence: ['review_schedule', 'compliance_reports', 'independent_audits'],
  },
  {
    id: 'iso27001-a12-2',
    framework: 'ISO 27001',
    controlId: 'A.12.2',
    controlName: 'Protection from Malware',
    description: 'Detection, prevention and recovery controls to protect against malware',
    category: 'Operations Security',
    severity: 'critical',
    requiredEvidence: ['antimalware_controls', 'malware_detection_logs', 'security_updates'],
    triggerThreshold: 0,
  },
];

const ISO42001_CONTROLS: ComplianceControl[] = [
  {
    id: 'iso42001-5-1',
    framework: 'ISO 42001',
    controlId: 'ISO42001-5.1',
    controlName: 'AI Policy and Objectives',
    description: 'AI management system policies, objectives, and strategic direction established',
    category: 'AI Governance',
    severity: 'high',
    requiredEvidence: ['ai_policy', 'strategic_objectives', 'management_commitment'],
  },
  {
    id: 'iso42001-6-1',
    framework: 'ISO 42001',
    controlId: 'ISO42001-6.1',
    controlName: 'AI Risk Assessment',
    description: 'AI-specific risks and opportunities identified, assessed, and managed',
    category: 'Risk Management',
    severity: 'critical',
    requiredEvidence: ['ai_risk_register', 'risk_assessment_methodology', 'mitigation_plans'],
    triggerThreshold: 0,
  },
  {
    id: 'iso42001-6-2',
    framework: 'ISO 42001',
    controlId: 'ISO42001-6.2',
    controlName: 'Data Governance for AI',
    description: 'Data quality, lineage, and governance controls for AI training and inference',
    category: 'Data Governance',
    severity: 'critical',
    requiredEvidence: ['data_quality_metrics', 'data_lineage', 'governance_framework'],
    triggerThreshold: 0,
  },
  {
    id: 'iso42001-7-1',
    framework: 'ISO 42001',
    controlId: 'ISO42001-7.1',
    controlName: 'AI Competence and Awareness',
    description: 'Personnel working with AI systems have necessary competence and awareness',
    category: 'Human Resources',
    severity: 'high',
    requiredEvidence: ['training_records', 'competency_assessment', 'awareness_program'],
  },
  {
    id: 'iso42001-8-1',
    framework: 'ISO 42001',
    controlId: 'ISO42001-8.1',
    controlName: 'AI System Lifecycle Management',
    description: 'AI system lifecycle planned, implemented, and controlled from development to decommission',
    category: 'Lifecycle',
    severity: 'critical',
    requiredEvidence: ['lifecycle_documentation', 'development_controls', 'decommission_procedures'],
    triggerThreshold: 0,
  },
  {
    id: 'iso42001-8-2',
    framework: 'ISO 42001',
    controlId: 'ISO42001-8.2',
    controlName: 'AI Impact Assessment',
    description: 'Societal, ethical, and individual impact of AI systems assessed and documented',
    category: 'Impact Assessment',
    severity: 'high',
    requiredEvidence: ['impact_assessment', 'ethical_review', 'stakeholder_consultation'],
  },
  {
    id: 'iso42001-8-3',
    framework: 'ISO 42001',
    controlId: 'ISO42001-8.3',
    controlName: 'Continuous Learning and Model Updates',
    description: 'AI/ML models continuously monitored, updated, and validated for performance',
    category: 'Model Management',
    severity: 'critical',
    requiredEvidence: ['model_monitoring', 'update_procedures', 'validation_reports'],
    triggerThreshold: 0,
  },
  {
    id: 'iso42001-5-2',
    framework: 'ISO 42001',
    controlId: 'ISO42001-5.2',
    controlName: 'AI Policy Framework',
    description: 'Comprehensive AI policy framework established covering ethical principles, risk tolerance, and governance structure',
    category: 'AI Governance',
    severity: 'critical',
    requiredEvidence: ['ai_policy_framework', 'ethical_guidelines', 'governance_structure', 'policy_approval_records'],
    triggerThreshold: 0,
  },
  {
    id: 'iso42001-8-4',
    framework: 'ISO 42001',
    controlId: 'ISO42001-8.4',
    controlName: 'AI Lifecycle Management',
    description: 'End-to-end AI system lifecycle management from conception through deployment to retirement',
    category: 'Lifecycle',
    severity: 'critical',
    requiredEvidence: ['lifecycle_stages_documentation', 'stage_gate_reviews', 'retirement_procedures', 'version_control'],
    triggerThreshold: 0,
  },
  {
    id: 'iso42001-7-2',
    framework: 'ISO 42001',
    controlId: 'ISO42001-7.2',
    controlName: 'AI Transparency Requirements',
    description: 'AI system operations, limitations, and decision-making processes transparently documented and communicated',
    category: 'Transparency',
    severity: 'high',
    requiredEvidence: ['transparency_documentation', 'model_cards', 'user_disclosures', 'explainability_reports'],
  },
  {
    id: 'iso42001-5-3',
    framework: 'ISO 42001',
    controlId: 'ISO42001-5.3',
    controlName: 'AI Accountability Framework',
    description: 'Clear accountability and responsibility assigned for AI system decisions, outputs, and impacts',
    category: 'AI Governance',
    severity: 'critical',
    requiredEvidence: ['accountability_matrix', 'responsibility_assignments', 'decision_authority_records', 'audit_trails'],
    triggerThreshold: 0,
  },
  {
    id: 'iso42001-6-3',
    framework: 'ISO 42001',
    controlId: 'ISO42001-6.3',
    controlName: 'AI Risk Management Process',
    description: 'Systematic AI risk management process for identifying, assessing, treating, and monitoring AI-specific risks',
    category: 'Risk Management',
    severity: 'critical',
    requiredEvidence: ['risk_management_framework', 'risk_assessments', 'treatment_plans', 'monitoring_reports'],
    triggerThreshold: 0,
  },
  {
    id: 'iso42001-8-5',
    framework: 'ISO 42001',
    controlId: 'ISO42001-8.5',
    controlName: 'Human Oversight of AI',
    description: 'Human oversight mechanisms established to monitor, intervene, and override AI system decisions when necessary',
    category: 'Human Oversight',
    severity: 'critical',
    requiredEvidence: ['oversight_procedures', 'intervention_mechanisms', 'override_logs', 'human_review_records'],
    triggerThreshold: 0,
  },
  {
    id: 'iso42001-9-1',
    framework: 'ISO 42001',
    controlId: 'ISO42001-9.1',
    controlName: 'Continuous Improvement Process',
    description: 'Continuous improvement process for AI management system based on monitoring, measurement, and feedback',
    category: 'Continuous Improvement',
    severity: 'high',
    requiredEvidence: ['improvement_plans', 'performance_metrics', 'feedback_analysis', 'corrective_actions'],
  },
];

const ADVANCED_CONTROLS: ComplianceControl[] = [
  {
    id: 'hipaa-164-308-b-1',
    framework: 'HIPAA',
    controlId: '164.308(b)(1)',
    controlName: 'Business Associate Contracts',
    description: 'Written contracts with business associates ensure HIPAA compliance for PHI access',
    category: 'Administrative Safeguards',
    severity: 'critical',
    requiredEvidence: ['baa_contracts', 'vendor_assessments', 'compliance_monitoring'],
    triggerThreshold: 0,
  },
  {
    id: 'nist-manage-2-1',
    framework: 'NIST AI RMF',
    controlId: 'MANAGE-2.1',
    controlName: 'AI System Continuous Monitoring',
    description: 'AI systems are regularly monitored to verify conformance with intended use',
    category: 'Manage',
    severity: 'critical',
    requiredEvidence: ['monitoring_dashboard', 'performance_metrics', 'deviation_alerts'],
    triggerThreshold: 0,
  },
  {
    id: 'nist-measure-3-1',
    framework: 'NIST AI RMF',
    controlId: 'MEASURE-3.1',
    controlName: 'AI Fairness Assessment',
    description: 'AI system is tested and monitored for fairness and equity across demographic groups',
    category: 'Measure',
    severity: 'critical',
    requiredEvidence: ['fairness_testing', 'demographic_analysis', 'disparity_reports'],
    triggerThreshold: 5,
  },
];

const STATE_SPECIFIC_CONTROLS: ComplianceControl[] = [
  {
    id: 'ca-sb1047-1',
    framework: 'California SB 1047',
    controlId: 'CA-SB1047-1',
    controlName: 'Critical Decision Disclosure',
    description: 'AI systems making critical decisions must disclose AI involvement',
    category: 'Transparency',
    severity: 'high',
    requiredEvidence: ['disclosure_notices', 'user_interface', 'transparency_docs'],
  },
  {
    id: 'ca-sb1047-2',
    framework: 'California SB 1047',
    controlId: 'CA-SB1047-2',
    controlName: 'Catastrophic Risk Assessment',
    description: 'Frontier models assessed for catastrophic safety risks',
    category: 'Safety',
    severity: 'critical',
    requiredEvidence: ['risk_assessment', 'safety_testing', 'incident_prevention'],
    triggerThreshold: 0,
  },
  {
    id: 'co-ai-act-1',
    framework: 'Colorado AI Act',
    controlId: 'CO-AI-1',
    controlName: 'Algorithmic Discrimination Prevention',
    description: 'High-risk AI systems assessed and monitored for discriminatory outcomes',
    category: 'Fairness',
    severity: 'critical',
    requiredEvidence: ['discrimination_testing', 'fairness_metrics', 'impact_assessment'],
    triggerThreshold: 5,
  },
  {
    id: 'nyc-144-1',
    framework: 'NYC Local Law 144',
    controlId: 'NYC-144-1',
    controlName: 'AEDT Bias Audit',
    description: 'Automated employment decision tools undergo annual bias audits',
    category: 'Employment',
    severity: 'critical',
    requiredEvidence: ['bias_audit', 'audit_report', 'public_disclosure'],
    triggerThreshold: 0,
  },
];

const ALL_CONTROLS = [
  ...HIPAA_CONTROLS,
  ...NIST_AI_RMF_CONTROLS,
  ...FDA_SAMD_CONTROLS,
  ...ISO27001_CONTROLS,
  ...ISO42001_CONTROLS,
  ...ADVANCED_CONTROLS,
  ...STATE_SPECIFIC_CONTROLS,
];

export class ComplianceControlsCatalog {
  async initializeCatalog(): Promise<void> {
    console.log('Initializing compliance controls catalog...');
    
    for (const control of ALL_CONTROLS) {
      const existing = await db.query.complianceControls.findFirst({
        where: eq(complianceControls.controlId, control.controlId),
      });

      if (!existing) {
        await db.insert(complianceControls).values({
          framework: control.framework,
          controlId: control.controlId,
          controlName: control.controlName,
          description: control.description,
          evidenceRequirements: control.requiredEvidence,
        });
        console.log(`✓ Added control: ${control.framework} ${control.controlId}`);
      }
    }

    console.log(`✓ Compliance catalog initialized with ${ALL_CONTROLS.length} controls`);
  }

  async getControlsByFramework(framework: string) {
    return ALL_CONTROLS.filter(c => c.framework === framework);
  }

  async getControlById(controlId: string) {
    return ALL_CONTROLS.find(c => c.id === controlId);
  }

  async getAllControls() {
    return ALL_CONTROLS;
  }

  getControlsCount(): { total: number; byFramework: Record<string, number> } {
    const byFramework: Record<string, number> = {};
    
    for (const control of ALL_CONTROLS) {
      byFramework[control.framework] = (byFramework[control.framework] || 0) + 1;
    }

    return {
      total: ALL_CONTROLS.length,
      byFramework,
    };
  }
}

export const complianceControlsCatalog = new ComplianceControlsCatalog();
